{"version":3,"sources":["content/Posts/Resume.pdf","content/Markdown.jsx","content/Sections/PortfolioSection.jsx","content/Main.jsx","content/Navs/Header.jsx","content/Navs/Footer.jsx","content/Navs/Social.jsx","content/Posts/GaProject1.js","content/Blog.jsx","content/Posts/GaProject2.js","content/Posts/GaProject3.js","content/Posts/GaProject4.js","content/Posts/About.js","content/Posts/Contact.js","content/Navs/SiteRouter.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","options","overrides","h1","component","Typography","props","gutterBottom","variant","h2","h3","h4","paragraph","p","a","Link","li","withStyles","theme","listItem","marginTop","spacing","classes","className","Markdown","useStyles","makeStyles","markdown","typography","body2","padding","PortfolioSection","content","title","Grid","item","xs","md","id","Divider","map","post","key","substring","root","flexGrow","Main","projects","contact","about","Paper","toolbar","borderBottom","palette","divider","margin","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","flexShrink","ElevationScroll","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","React","cloneElement","elevation","Header","sections","Fragment","AppBar","Toolbar","section","color","noWrap","href","url","Copyright","align","Date","getFullYear","footer","backgroundColor","background","paper","Footer","description","Container","maxWidth","sidebarAboutBox","grey","sidebarSection","Social","network","container","direction","alignItems","icon","name","namePlate","mainGrid","textAlign","navigations","socials","GitHubIcon","LinkedInIcon","DownloadIcon","Resume","Blog","CssBaseline","SiteRouter","exact","path","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d3bec0e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Resume.18f83c31.pdf\";","import React from 'react';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst styles = (theme) => ({\n    listItem: {\n        marginTop: theme.spacing(1),\n    },\n});\n\nconst options = {\n    overrides: {\n        h1: {\n            component: Typography,\n            props: {\n                gutterBottom: true,\n                variant: 'h5',\n            },\n        },\n        h2: { component: Typography, props: { gutterBottom: true, variant: 'h6' } },\n        h3: { component: Typography, props: { gutterBottom: true, variant: 'subtitle1' } },\n        h4: {\n            component: Typography,\n            props: { gutterBottom: true, variant: 'caption', paragraph: true },\n        },\n        p: { component: Typography, props: { paragraph: true } },\n        a: { component: Link },\n        li: {\n        component: withStyles(styles)(({ classes, ...props }) => (\n            <li className={classes.listItem}>\n                <Typography component=\"span\" {...props} />\n            </li>\n        )),\n        },\n    },\n};\n\nexport default function Markdown(props) {\n    return <ReactMarkdown options={options} {...props} />;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Markdown from '../Markdown';\n\nconst useStyles = makeStyles((theme) => ({\n    markdown: {\n        ...theme.typography.body2,\n        padding: theme.spacing(3, 0),\n    },\n}));\n\nexport default function PortfolioSection(props) {\n    const classes = useStyles();\n    const { content, title } = props;\n\n    return (\n        <Grid item xs={12} md={12} id={title}>\n            <Typography variant=\"h6\" gutterBottom>\n                {title}\n            </Typography>\n            <Divider />\n            {content.map((post) => (\n                <Markdown className={classes.markdown} key={post.substring(0, 40)}>\n                    {post}\n                </Markdown>\n            ))}\n        </Grid>\n    );\n}\n\nPortfolioSection.propTypes = {\n    content: PropTypes.array,\n    title: PropTypes.string,\n};\n","import React from 'react';\nimport PortfolioSection from './Sections/PortfolioSection';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function Main(props) {\n    const { projects, contact, about } = props;\n    const classes = useStyles();\n    return (\n        <Grid item xs={8} md={8}>\n            <Paper className={classes.root} >\n                <PortfolioSection title=\"About\" content={[about]} />\n                <PortfolioSection title=\"Projects\" content={projects} />\n                <PortfolioSection title=\"Contact\" content={[contact]} />\n            </Paper>\n        </Grid>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Link from '@material-ui/core/Link';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\n\n\nconst useStyles = makeStyles((theme) => ({\n    toolbar: {\n        borderBottom: `1px solid ${theme.palette.divider}`,\n        margin: theme.spacing(0,'auto')\n    },\n    toolbarTitle: {\n        flex: 1,\n    },\n    toolbarSecondary: {\n        justifyContent: 'space-between',\n        overflowX: 'auto',\n    },\n    toolbarLink: {\n        padding: theme.spacing(0,5),\n        flexShrink: 0,\n    },\n}));\n\nfunction ElevationScroll(props) {\n    const { children, window } = props;\n    // Note that you normally won't need to set the window ref as useScrollTrigger\n    // will default to window.\n    // This is only being set here because the demo is in an iframe.\n    const trigger = useScrollTrigger({\n        disableHysteresis: true,\n        threshold: 0,\n        target: window ? window() : undefined,\n    });\n\n    return React.cloneElement(children, {\n        elevation: trigger ? 4 : 0,\n    });\n}\n\n\nexport default function Header(props) {\n    const classes = useStyles();\n    const { sections } = props;\n\n    return (\n        <React.Fragment>\n            <ElevationScroll {...props}>\n                <AppBar>\n                    <Toolbar component=\"nav\" variant=\"dense\" className={classes.toolbar}>\n                        {sections.map((section) => (\n                            <Link\n                                color=\"inherit\"\n                                noWrap\n                                key={section.title}\n                                variant=\"body2\"\n                                href={section.url}\n                                className={classes.toolbarLink}\n                            >\n                                {section.title}\n                            </Link>\n                        ))}\n                    </Toolbar>\n                </AppBar>\n            </ElevationScroll>\n        </React.Fragment>\n    );\n}\n\nHeader.propTypes = {\n    sections: PropTypes.array,\n    title: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Lars Nelson Portfolio\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        // marginTop: theme.spacing(8),\n        padding: theme.spacing(6, 0),\n    },\n}));\n\nexport default function Footer(props) {\n    const classes = useStyles();\n    const { description, title } = props;\n\n    return (\n        <footer className={classes.footer}>\n            <Container maxWidth=\"lg\">\n                <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                    {title}\n                </Typography>\n                <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                    {description}\n                </Typography>\n                <Copyright />\n            </Container>\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    description: PropTypes.string,\n    title: PropTypes.string,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n    sidebarAboutBox: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey[200],\n    },\n    sidebarSection: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nexport default function Social(props) {\n    const classes = useStyles();\n    const { content } = props;\n\n    return (\n        <Grid item xs={2} md={2}>\n            <Typography variant=\"h6\" gutterBottom className={classes.sidebarSection}>\n                Social\n            </Typography>\n            {content.map((network) => (\n                    <a href={network.url} target=\"_blank\">\n                        <Grid container direction=\"row\" spacing={1} alignItems=\"center\">\n                            <Grid item> <network.icon /> </Grid>\n                            <Grid item>{network.name}</Grid>\n                        </Grid>\n                    </a>\n            ))}\n        </Grid>\n    );\n}\n","export default `\n## [Underground Combat](https://github.com/MisterDaviso/project-one-underground-combat)\nA turn-based combat rpg built using the Phaser 3 API. Features multiple win conditions, varied gameplay, and modular encounters. The game is styled after the game \"Undertale\" by Toby Fox. \n\nThe first three days were just spent learning Phaser 3. This allowed actual production to be fast-tracked and in fact allowed for more time to debug and add features than might otherwise have been possible building the project out piece by piece.\n`\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Main from './Main'\nimport Typography from '@material-ui/core/Typography';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport DownloadIcon from '@material-ui/icons/ArrowDownward'\nimport Resume from './Posts/Resume.pdf'\nimport Header from './Navs/Header';\nimport Footer from './Navs/Footer';\nimport Social from './Navs/Social'\n// The Project information\nimport GaProject1 from './Posts/GaProject1';\nimport GaProject2 from './Posts/GaProject2';\nimport GaProject3 from './Posts/GaProject3';\nimport GaProject4 from './Posts/GaProject4';\nimport about from './Posts/About'\nimport contact from './Posts/Contact'\n\nconst useStyles = makeStyles((theme) => ({\n    namePlate: {\n        marginTop: theme.spacing(10)\n    },\n    mainGrid: {\n        marginTop: theme.spacing(3),\n    },\n    root: {\n        flexGrow: 1,\n        textAlign: 'center',\n        padding: theme.spacing(2)\n    },\n}));\n\n// The Nav Bar links\nconst navigations = [\n    { title: 'Top', url: '#Top'},\n    { title: 'About', url: '#About'},\n    { title: 'Projects', url: '#Projects' },\n    { title: 'Contact', url: '#Contact'},\n];\n\nconst projects = [GaProject1, GaProject2, GaProject3, GaProject4];\n\n// This is the social media section. And resume. Yeah.\nconst socials = [\n    { name: 'GitHub', icon: GitHubIcon, url: 'https://github.com/MisterDaviso'},\n    { name: 'LinkedIn', icon: LinkedInIcon, url: 'https://www.linkedin.com/in/lars-nelson-392084150/'},\n    { name: 'Resume', icon: DownloadIcon, url: Resume}\n]\n\n/**\n * The primary HTML to return\n */\nexport default function Blog() {\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Container maxWidth=\"lg\">\n                <Header sections={navigations} id=\"Top\"/>\n                <main>\n                    <Typography\n                        component=\"h2\"\n                        variant=\"h5\"\n                        color=\"inherit\"\n                        align=\"center\"\n                        noWrap\n                        className={classes.namePlate}\n                    >\n                        Lars Nelson\n                    </Typography>\n                    <Grid container spacing={1} className={classes.mainGrid}>\n                        <Grid item xs={2} />\n                        <Main about={about} projects={projects} contact={contact} /> \n                        <Social content={socials} />\n                    </Grid>\n                </main>\n            </Container>\n            <Footer title=\"Lars Nelson\" description=\"Thank you for your consideration!\" />\n        </React.Fragment>\n    );\n}","export default `\n## [Personalized Twitter](https://github.com/MisterDaviso/personalied-tweets)\nAn application that allows users to sort tweets of a particular hashtag according to their relevance to the user. Features OAuth2 authorization and Partitioned SQL tables.\n\nThis was the most technically challenging project during my time at GA. Postgres does not support partitioned tables, so a significant portion of database calls were written in raw SQL. OAuth was not part of our course material, and support for Twitter Oauth2 calls specifically is lacking. These two factors meant I was required to make up a significant portion of this data manipulation from scratch, which detracted from other areas such as styling, but in the end I was able to create a functional application.\n`\n","export default `\n## [Plan Ahead](https://github.com/MisterDaviso/pugetsound-schools-server)\n\nAn online school website that allows teachers to create classes and assignments and for students to sign up for those classes and view those assignments. Features complex database manipulation and user freedom.\n\nThis was a group project, and my contribution was the entirety of the server-side code. I built the models with input from my teammates and updated them as new information became necessary to store. Multiple complex routes became necessary as more complex operations were required to ensure smoother user experiences on the front end.\n\n[Client Code](https://github.com/ObtuseSpruce/pugetsound-client) || \n[Server Code](https://github.com/MisterDaviso/pugetsound-schools-server)\n`","export default `\n## [Teach Machines to Check](https://github.com/MisterDaviso/teach-machines-to-check)\n\nA simple neural network designed to find an algorithm that can play checkers built entirely in python. The code determines every possible move on a given turn and then condenses that information into a readable format for the algorithm which then chooses the most optimal move among them.\n\nThis was my final project as General Assembly. It required an understanding of calculus, linear algebra, and data manipulation. The former two allowed me to create an algorithm without the use of TensorFlow and the later I learned as I went through three iterations of structuring the board data for the algorithm to use.\n`","export default `\nI am a software engineer with a passion for creating cohesive, modular, and practical systems of logic. I ensure my work is not just functional, but conceptually sound. This is a skill that allows me to parse through old systems easily and adapt to new technologies quickly. I intend to work at the forefront of new technologies, both for the challenge it brings and the potential it provides.\n`","export default `\nEmail: lnelson7820@gmail.com\n\nPhone: 253-225-1796\n`","import React from 'react';\nimport { Route } from 'react-router-dom'\nimport Blog from '../Blog'\n\nconst SiteRouter = props => {\n    return (\n        <div>\n            <Route exact path=\"/\" component={Blog} />\n            <Route path=\"/lars-nelson\" component={Blog} />\n        </div>\n    )\n}\n\nexport default SiteRouter","import React from 'react';\nimport SiteRouter from './content/Navs/SiteRouter'\nimport {BrowserRouter as Router } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Router>\n      <SiteRouter />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}